#
#Mon Mar 20 02:40:15 GMT 2017
Controller2S.GetBW=_operation,sync
FilteredIRSensor.sensor=ISensorInt8,class
LoopCounter.totalEnergy=real,variable
IRDemux.HasFailed=_operation,sync
Thread.thread=_operation,sync
Thread.outputWritten=bool,variable
PID.tauI=real,variable
Controller2S.PrintLFSensorValues=_operation,sync
PID.tauD=real,variable
BlackWhiteSensor.Calibrate=_operation,sync
Controller3S.GetRightServo=_operation,sync
FilteredIRSensor.Read=_operation,sync
BlackWhiteSensor.IsWhite=_operation,sync
AbstractController.Stop=_operation,sync
AbstractController.encRight=ISensorReal,class
IO.fecho=_operation,sync
AbstractController.encLeft=ISensorReal,class
FilteredIRSensor.HasFailed=_operation,sync
AbstractController.Loop=_operation,sync
Controller5S.GetLF=_operation,sync
MATH.srand=_operation,sync
World.BATTERY_INITIAL_ENERGY=nat1,const
World.sensor2FailTime=nat,const
IOFactory.encLeft=Encoder,class
PID.beta=real,variable
Controller2S.GetAllLF=_operation,sync
BlackWhiteSensor.MAX=nat,variable
Controller5S.Init=_operation,sync
IOFactory.servoRight=SpeedServo,class
IRDemux.local_lf=seq of (real),variable
Controller5S.GetAllBW=_operation,sync
AbstractController.servoLeft=IActuatorRealPercent,class
LoopCounter.PrintSplitTime=_operation,sync
LoopCounter.total_black_time=real,variable
R2G2P.mainthread=Thread,class
LoopCounter.CheckPosition=_operation,sync
Thread.io=IOFactory,class
DTControl.Output=_operation,sync
DTControl.SetSampleTime=_operation,sync
Controller3S.Init=_operation,sync
SpeedServo.local_val=real,variable
BlackWhiteSensor.GetSensor=_operation,sync
Controller2S.sensor2=BlackWhiteSensor,class
Controller3S.GetLeftEncoder=_operation,sync
Controller2S.sensor1=BlackWhiteSensor,class
Controller3S.GetAllLF=_operation,sync
Controller5S.Reverse=_operation,sync
LoopCounter.started=bool,variable
AbstractController.GetLeftServo=_operation,sync
Controller2S.GetLF=_operation,sync
Controller5S.Turn=_operation,sync
AbstractController.Forward=_operation,sync
PID.SetSampleTime=_operation,sync
IOFactory.loopCounter=LoopCounter,class
EnergySensor.local_val=real,variable
LoopCounter.centre_value=real,variable
Encoder.Sync=_operation,sync
Controller2S.Init=_operation,sync
BlackWhiteSensor.IsBlack=_operation,sync
IOFactory.energySensor=EnergySensor,class
Encoder.Read=_operation,sync
Controller3S.GetBW=_operation,sync
SpeedServo.Sync=_operation,sync
IO.printf=_operation,sync
FilteredIRSensor.NUM_SAMPLES=nat1,const
Encoder.val=real,variable
Controller3S.sensor3=BlackWhiteSensor,class
Controller3S.sensor2=BlackWhiteSensor,class
SpeedServo.val=real,variable
SpeedServo.Read=_operation,sync
Controller3S.sensor1=BlackWhiteSensor,class
Controller3S.Turn=_operation,sync
R2G2P=_system,systemclass
IActuatorRealPercent.Read=_operation,sync
SpeedServo.SpeedServo=_operation,sync
IRDemux.Sync=_operation,sync
PID.DEF_TAUI=real,const
IRDemux.num_values=nat1,variable
Encoder.reversed=bool,variable
PID.DEF_TAUD=real,const
IRDemux.Read=_operation,sync
Encoder.local_val=real,variable
AbstractController.init=bool,variable
Controller2S.GetRightEncoder=_operation,sync
Controller2S.Turn=_operation,sync
Controller5S.GetAllLF=_operation,sync
AbstractController.servoRight=IActuatorRealPercent,class
IOFactory.EncoderFactory=_operation,sync
PID.sampletime=real,variable
AbstractController.Init=_operation,sync
Thread.Step=_operation,sync
Controller2S.GetLeftServo=_operation,sync
Controller3S.GetRightEncoder=_operation,sync
EnergySensor.Sync=_operation,sync
Controller5S.GetLeftServo=_operation,sync
EnergySensor.Read=_operation,sync
R2G2P.controller=AbstractController,class
Thread.controller=AbstractController,class
SpeedServo.reversed=bool,variable
Controller5S.sensor5=BlackWhiteSensor,class
Controller5S.sensor4=BlackWhiteSensor,class
Controller5S.sensor3=BlackWhiteSensor,class
Controller5S.sensor2=BlackWhiteSensor,class
Controller5S.sensor1=BlackWhiteSensor,class
PID.DEF_BETA=real,const
Controller2S.Forward=_operation,sync
IOFactory.IRSensorFactory=_operation,sync
IRDemux.IRDemux=_operation,sync
IO.echo=_operation,sync
MATH.rand=_operation,sync
BlackWhiteSensor.MIN=nat,variable
IOFactory.irsensors=seq of (IRSensor),variable
IO.print=_operation,sync
Controller3S.GetLF=_operation,sync
AbstractController.AbstractController=_operation,sync
AbstractController.Turn=_operation,sync
IRSensor.IRSensor=_operation,sync
AbstractController.bw=seq of (BlackWhiteSensor),variable
BlackWhiteSensor.Scale=_operation,sync
ISensorInt8.Read=_operation,sync
IRSensor.demux=IRDemux,class
Controller5S.PrintBWSensorValues=_operation,sync
Controller2S.GetRightServo=_operation,sync
IOFactory.Sync=_operation,sync
ISensorReal.Read=_operation,sync
IActuatorRealPercent.Write=_operation,sync
Controller5S.Step=_operation,sync
Controller3S.Forward=_operation,sync
AbstractController.GetRightServo=_operation,sync
AbstractController.GetBW=_operation,sync
AbstractController.GetAllBW=_operation,sync
SpeedServo.Write=_operation,sync
Controller2S.Sensor2Fail=_operation,sync
IRDemux.local_lf_failed=seq of (bool),variable
Controller5S.AbstractController=_operation,sync
PID.prev_err=real,variable
AbstractController.Reverse=_operation,sync
PID.DEF_K=real,const
PID.k=real,variable
World.lf_positions=seq of (seq of (real)),const
LoopCounter.batteryDead=bool,variable
PID.uP=real,variable
BlackWhiteSensor.BlackWhiteSensor=_operation,sync
Controller3S.Step=_operation,sync
LoopCounter.X_SPLIT=nat,const
IOFactory.servoLeft=SpeedServo,class
PID.uI=real,variable
IO.ferror=_operation,sync
World.NUM_IR_SENSORS=nat1,const
Controller5S.GetRightEncoder=_operation,sync
BlackWhiteSensor.sensor=ISensorInt8,class
Thread.period=nat,variable
PID.uD=real,variable
World.PROPORTIONAL=bool,const
Controller5S.PrintLFSensorValues=_operation,sync
TYPE_CHECK_STATUS=true
R2G2P.cpu=CPU,class
MATH.srand2=_operation,sync
DTControl.sampletime=real,variable
EnergySensor.val=real,variable
LoopCounter.pos_y=real,variable
LoopCounter.pos_x=real,variable
Controller2S.Step=_operation,sync
AbstractController.PrintBWSensorValues=_operation,sync
LoopCounter.numLaps=nat,variable
Controller3S.AbstractController=_operation,sync
Controller3S.GetLeftServo=_operation,sync
IRSensor.Read=_operation,sync
Controller5S.GetLeftEncoder=_operation,sync
IO.println=_operation,sync
ISensorInt8.HasFailed=_operation,sync
World.sensor1FailTime=nat,const
Controller5S.Forward=_operation,sync
Thread.finished=bool,variable
Controller5S.Stop=_operation,sync
IRSensor.HasFailed=_operation,sync
AbstractController.lf=seq of (ISensorInt8),variable
LoopCounter.PrintTotals=_operation,sync
IOFactory.ServoFactory=_operation,sync
Controller3S.PrintBWSensorValues=_operation,sync
Controller2S.AbstractController=_operation,sync
FilteredIRSensor.FilteredIRSensor=_operation,sync
Controller5S.Loop=_operation,sync
LoopCounter.totalTime=real,variable
AbstractController.GetLF=_operation,sync
IRDemux.lf=seq of (real),variable
AbstractController.GetAllLF=_operation,sync
Controller3S.Stop=_operation,sync
Thread.Thread=_operation,sync
FilteredIRSensor.sum=_operation,sync
AbstractController.PrintLFSensorValues=_operation,sync
R2G2P.io=IOFactory,class
Controller5S.GetBW=_operation,sync
PID.Output=_operation,sync
Controller3S.Loop=_operation,sync
Controller5S.GetRightServo=_operation,sync
IOFactory.irdemux=IRDemux,class
Controller2S.Reverse=_operation,sync
AbstractController.Step=_operation,sync
AbstractController.GetLeftEncoder=_operation,sync
Controller2S.GetAllBW=_operation,sync
Controller2S.Sensor1Fail=_operation,sync
World.SIMULATION_TIME=nat1,const
Controller2S.Stop=_operation,sync
Controller2S.PrintBWSensorValues=_operation,sync
Controller3S.PrintLFSensorValues=_operation,sync
IRDemux.lf_failed=seq of (bool),variable
Controller2S.Loop=_operation,sync
IOFactory.encRight=Encoder,class
Encoder.Encoder=_operation,sync
IOFactory.EnergySensorFactory=_operation,sync
PID.PID=_operation,sync
Controller3S.Reverse=_operation,sync
World.run=_operation,sync
IRSensor.index=nat1,variable
World.block=_operation,sync
AbstractController.GetRightEncoder=_operation,sync
Controller3S.GetAllBW=_operation,sync
Controller2S.GetLeftEncoder=_operation,sync
LoopCounter.black_time=real,variable
FilteredIRSensor.samples=seq of (nat),variable
